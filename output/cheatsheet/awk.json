[
  {
    "name": "Basics I",
    "commands": [
      {
        "key": "$1",
        "description": "Reference first column"
      },
      {
        "key": "awk'/pattern/{action}'file",
        "description": "Execute action for matched pattern 'pattern' on file 'file'"
      },
      {
        "key": ";",
        "description": "Char to separate two actions"
      },
      {
        "key": "print",
        "description": "Print current record line"
      },
      {
        "key": "$0",
        "description": "Reference current record line"
      }
    ]
  },
  {
    "name": "Variables I",
    "commands": [
      {
        "key": "$2",
        "description": "Reference second column"
      },
      {
        "key": "FS",
        "description": "Field separator of input file (default whitespace)"
      },
      {
        "key": "NF",
        "description": "Number of fields in current record"
      },
      {
        "key": "NR",
        "description": "Line number of the current record"
      }
    ]
  },
  {
    "name": "Basics II",
    "commands": [
      {
        "key": "^",
        "description": "Match beginning of field"
      },
      {
        "key": "`",
        "description": "Match opterator"
      },
      {
        "key": "!`",
        "description": "Do not match operator"
      },
      {
        "key": "-F",
        "description": "Command line option to specify input field delimiter"
      },
      {
        "key": "BEGIN",
        "description": "Denotes block executed once at start"
      },
      {
        "key": "END",
        "description": "Denotes block executed once at end"
      },
      {
        "key": "str1str2",
        "description": "Concat str1 and str2"
      }
    ]
  },
  {
    "name": "One-Line Exercises I",
    "commands": [
      {
        "key": "awk'{print$1}'file",
        "description": "Print first field for each record in file"
      },
      {
        "key": "awk'/regex/'file",
        "description": "Print only lines that match regex in file"
      },
      {
        "key": "awk'!/regex/'file",
        "description": "Print only lines that do not match regex in file"
      },
      {
        "key": "awk'$2==\"foo\"'file",
        "description": "Print any line where field 2 is equal to \"foo\" in file"
      },
      {
        "key": "awk'$2!=\"foo\"'file",
        "description": "Print lines where field 2 is NOT equal to \"foo\" in file"
      },
      {
        "key": "awk'$1`/regex/'file",
        "description": "Print line if field 1 matches regex in file"
      },
      {
        "key": "awk'$1!`/regex/'file",
        "description": "Print line if field 1 does NOT match regex in file"
      }
    ]
  },
  {
    "name": "Variables II",
    "commands": [
      {
        "key": "FILENAME",
        "description": "Reference current input file"
      },
      {
        "key": "FNR",
        "description": "Reference number of the current record relative to current input file"
      },
      {
        "key": "OFS",
        "description": "Field separator of the outputted data (default whitespace)"
      },
      {
        "key": "ORS",
        "description": "Record separator of the outputted data (default newline)"
      },
      {
        "key": "RS",
        "description": "Record separator of input file (default newline)"
      }
    ]
  },
  {
    "name": "Variables III",
    "commands": [
      {
        "key": "CONVFMT",
        "description": "Conversion format used when converting numbers (default %.6g)"
      },
      {
        "key": "SUBSEP",
        "description": "Separates multiple subscripts (default 034)"
      },
      {
        "key": "OFMT",
        "description": "Output format for numbers (default %.6g)"
      },
      {
        "key": "ARGC",
        "description": "Argument count, assignable"
      },
      {
        "key": "ARGV",
        "description": "Argument array, assignable"
      },
      {
        "key": "ENVIRON",
        "description": "Array of environment variables"
      }
    ]
  },
  {
    "name": "Functions I",
    "commands": [
      {
        "key": "index(s,t)",
        "description": "Position in string s where string t occurs, 0 if not found"
      },
      {
        "key": "length(s)",
        "description": "Length of string s (or $0 if no arg)"
      },
      {
        "key": "rand",
        "description": "Random number between 0 and 1"
      },
      {
        "key": "substr(s,index,len)",
        "description": "Return len-char substring of s that begins at index (counted from 1)"
      },
      {
        "key": "srand",
        "description": "Set seed for rand and return previous seed"
      },
      {
        "key": "int(x)",
        "description": "Truncate x to integer value"
      }
    ]
  },
  {
    "name": "Functions II",
    "commands": [
      {
        "key": "split(s,a,fs)",
        "description": "Split string s into array a split by fs, returning length of a"
      },
      {
        "key": "match(s,r)",
        "description": "Position in string s where regex r occurs, or 0 if not found"
      },
      {
        "key": "sub(r,t,s)",
        "description": "Substitute t for first occurrence of regex r in string s (or $0 if s not given)"
      },
      {
        "key": "gsub(r,t,s)",
        "description": "Substitute t for all occurrences of regex r in string s"
      }
    ]
  },
  {
    "name": "Functions III",
    "commands": [
      {
        "key": "system(cmd)",
        "description": "Execute cmd and return exit status"
      },
      {
        "key": "tolower(s)",
        "description": "String s to lowercase"
      },
      {
        "key": "toupper(s)",
        "description": "String s to uppercase"
      },
      {
        "key": "getline",
        "description": "Set $0 to next input record from current input file."
      }
    ]
  },
  {
    "name": "One-Line Exercises II",
    "commands": [
      {
        "key": "awk'NR!=1{print$1}'file",
        "description": "Print first field for each record in file excluding the first record"
      },
      {
        "key": "awk'END{printNR}'file",
        "description": "Count lines in file"
      },
      {
        "key": "awk'/foo/{n++};END{printn+0}'file",
        "description": "Print total number of lines that contain foo"
      },
      {
        "key": "awk'{total=total+NF};END{printtotal}'file",
        "description": "Print total number of fields in all lines"
      },
      {
        "key": "awk'/regex/{getline;print}'file",
        "description": "Print line immediately after regex, but not line containing regex in file"
      },
      {
        "key": "awk'length>32'file",
        "description": "Print lines with more than 32 characters in file"
      },
      {
        "key": "awk'NR==12'file",
        "description": "Print line number 12 of file"
      }
    ]
  }
]