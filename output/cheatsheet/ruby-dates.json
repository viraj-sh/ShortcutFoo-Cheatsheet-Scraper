[
  {
    "name": "Date & Time Parts I",
    "commands": [
      {
        "key": "d.cwday",
        "description": "Return the day of calendar week of date d (1-7, Monday is 1)"
      },
      {
        "key": "d.cweek",
        "description": "Return the calendar week number of date d (1-53)"
      },
      {
        "key": "d.day",
        "description": "Return the day of the month of date d (1-31)"
      },
      {
        "key": "d.month",
        "description": "Return the month (1-12) of date d (option 2)"
      },
      {
        "key": "d.wday",
        "description": "Return the day of week of date d (0-6, Sunday is zero)"
      },
      {
        "key": "d.yday",
        "description": "Return the day of year of date d (1-366)"
      },
      {
        "key": "d.year",
        "description": "Return the year of date d"
      }
    ]
  },
  {
    "name": "Addition / Subtraction I",
    "commands": [
      {
        "key": "d+integer",
        "description": "Return a date object with integer days added to date d"
      },
      {
        "key": "d-integer",
        "description": "Return a date object with integer days subtracted from date d"
      },
      {
        "key": "d1-d2",
        "description": "Return the difference between date d1 and date d2"
      },
      {
        "key": "d<<integer",
        "description": "Return a date object with integer months subtracted from date d"
      },
      {
        "key": "d>>integer",
        "description": "Return a date object with integer months added to date d"
      },
      {
        "key": "d.next",
        "description": "Return a date object denoting the following date of date d (option 1)"
      }
    ]
  },
  {
    "name": "Addition / Subtraction II",
    "commands": [
      {
        "key": "d.next_day",
        "description": "Date d + 1 day (long form)"
      },
      {
        "key": "d.next_month",
        "description": "Date d + 1 month (long form)"
      },
      {
        "key": "d.next_year",
        "description": "Date d + 1 year (long form)"
      },
      {
        "key": "d.prev_day",
        "description": "Date d - 1 day (long form)"
      },
      {
        "key": "d.prev_month",
        "description": "Date d - 1 month (long form)"
      },
      {
        "key": "d.prev_year",
        "description": "Date d - 1 year (long form)"
      },
      {
        "key": "d.succ",
        "description": "Return a date object denoting the following date of date d (option 2)"
      }
    ]
  },
  {
    "name": "Constants I",
    "commands": [
      {
        "key": "Date::ABBR_DAYNAMES",
        "description": "Array of abbreviated day names"
      },
      {
        "key": "Date::ABBR_MONTHNAMES",
        "description": "Array of abbreviated month names"
      },
      {
        "key": "Date::DAYNAMES",
        "description": "Array of full names of days of the week"
      },
      {
        "key": "Date::ENGLAND",
        "description": "The Julian day number of the day of calendar reform for England and her colonies"
      },
      {
        "key": "Date::GREGORIAN",
        "description": "The Julian day number of the day of calendar reform for the proleptic Gregorian calendar"
      },
      {
        "key": "Date::ITALY",
        "description": "The Julian day number of the day of calendar reform for Italy"
      },
      {
        "key": "Date::JULIAN",
        "description": "The Julian day number of the day of calendar reform for the proleptic Julian calendar"
      },
      {
        "key": "Date::MONTHNAMES",
        "description": "Array of full month names"
      }
    ]
  },
  {
    "name": "Conversion I",
    "commands": [
      {
        "key": "d.to_date",
        "description": "Return self of date d"
      },
      {
        "key": "d.to_datetime",
        "description": "Convert date d to DateTime"
      },
      {
        "key": "d.to_s",
        "description": "Return a string of date d in ISO 8601 format"
      },
      {
        "key": "d.to_time",
        "description": "Convert date d to Time"
      }
    ]
  },
  {
    "name": "Iteration I",
    "commands": [
      {
        "key": "d1.downto(d2)",
        "description": "Iterate down from dates d1 to d2 one day at a time passing date to block"
      },
      {
        "key": "d1.step(d2,integer)",
        "description": "Iterate integer steps at a time from dates d1 to d2"
      },
      {
        "key": "d1.upto(d2)",
        "description": "Iterate up from dates d1 to d2 one day at a time passing date to block"
      }
    ]
  },
  {
    "name": "Inspection I",
    "commands": [
      {
        "key": "d.friday?",
        "description": "Return true if date d is Friday"
      },
      {
        "key": "d.monday?",
        "description": "Return true if the date is Monday"
      },
      {
        "key": "d.saturday?",
        "description": "Return true if the date is Saturday"
      },
      {
        "key": "d.sunday?",
        "description": "Return true if date d is Sunday"
      },
      {
        "key": "d.thursday?",
        "description": "Return true if date d is Thursday"
      },
      {
        "key": "d.tuesday?",
        "description": "Return true if date d is Tuesday"
      },
      {
        "key": "d.wednesday?",
        "description": "Return true if date d is Wednesday"
      }
    ]
  },
  {
    "name": "Inspection II",
    "commands": [
      {
        "key": "d.inspect",
        "description": "Return the value as a string for inspection of date d"
      },
      {
        "key": "d.gregorian?",
        "description": "Return true if date d is on or after the day of calendar reform"
      },
      {
        "key": "d.julian?",
        "description": "Return true if date d is before the day of calendar reform"
      },
      {
        "key": "d.leap?",
        "description": "Return true if the year is a leap year of date d"
      }
    ]
  },
  {
    "name": "General I",
    "commands": [
      {
        "key": "d1<=>d2",
        "description": "Compare two dates d1 and d2 and return -1, 0, 1, or nil."
      },
      {
        "key": "d1===d2",
        "description": "Return true if d1 and d2 are the same day"
      },
      {
        "key": "d.asctime",
        "description": "Return a string in asctime format. Equivalent to strftime('%c') (option 1)"
      },
      {
        "key": "d.ctime",
        "description": "Return a string in asctime format. Equivalent to strftime('%c') (option 2)"
      },
      {
        "key": "d.httpdate",
        "description": "Format date d as http date (equivalent to strftime('%a, %d %b %Y %T GMT')"
      }
    ]
  },
  {
    "name": "Date & Time Parts II",
    "commands": [
      {
        "key": "d.ajd",
        "description": "Return the astronomical Julian day number of date d"
      },
      {
        "key": "d.amjd",
        "description": "Return the astronomical modified Julian day number of date d"
      },
      {
        "key": "d.cwyear",
        "description": "Return the calendar week based year of date d"
      },
      {
        "key": "d.day_fraction",
        "description": "Return the fractional part of the day of date d"
      },
      {
        "key": "d.jd",
        "description": "Return the Julian day number of date d"
      },
      {
        "key": "d.mon",
        "description": "Return the month (1-12) of date d (option 1)"
      },
      {
        "key": "d.start",
        "description": "Return the Julian day number denoting the day of calendar reform"
      }
    ]
  }
]